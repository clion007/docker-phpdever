name: Phpdever Docker Image Publish

on:
  workflow_dispatch:
    inputs:
      PHP_VERSION:
        required: false
        type: string
        description: 'PHP版本 (例如: 7.4.33, 8.0.30, 8.1.31, 留空则使用最新版本)'
      COMPOSER_VERSION:
        required: false
        type: string
        description: 'Composer版本 (例如: 2.5.8, 留空则使用最新版本)'
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/docker-publish.yml'
      - 'root/**'

jobs:
  Phpdever_Publish:
    runs-on: ubuntu-latest
    name: Publish Phpdever Image

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get latest versions
      id: getVersion
      run: |
        if [ -z "${{ inputs.PHP_VERSION }}" ]; then
          PHP_VERSION=$(wget -qO- -t1 -T2 https://www.php.net/downloads.php | grep "Changelog" | awk 'NR==1 {print}' | awk '{printf $2}')
        else
          PHP_VERSION=${{ inputs.PHP_VERSION }}
        fi
        PHP_NAME=$(echo $PHP_VERSION | awk -F "." '{print $1$2}')
        echo "PhpVersion=$PHP_VERSION" >> $GITHUB_OUTPUT
        echo "PhpName=$PHP_NAME" >> $GITHUB_OUTPUT
        if [ -z "${{ inputs.COMPOSER_VERSION }}" ]; then
          COMPOSER_VERSION=$(wget -qO- -t1 -T2 https://getcomposer.org/ | grep "Latest" | awk -F ">" '{printf $3}' | awk -F "<" '{printf $1}')
        else
          COMPOSER_VERSION=${{ inputs.COMPOSER_VERSION }}
        fi
        echo "ComposerVersion=$COMPOSER_VERSION" >> $GITHUB_OUTPUT
        echo "使用PHP版本: $PHP_VERSION"
        echo "使用Composer版本: $COMPOSER_VERSION"
     
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Login to AliYun Registry
      uses: docker/login-action@v3
      with:
        registry: registry.cn-chengdu.aliyuncs.com
        username: ${{ secrets.ALIYUN_USER }}
        password: ${{ secrets.ALIYUN_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Push Docker images
      id: build
      uses: docker/build-push-action@v6
      with:
        file: Dockerfile
        context: .
        push: true
        build-args: |
          COMPOSER_VERSION=${{ steps.getVersion.outputs.ComposerVersion }}
          PHP_VERSION=${{ steps.getVersion.outputs.PhpVersion }}
        tags: |
          clion007/phpdever:latest
          clion007/phpdever:php${{ steps.getVersion.outputs.PhpVersion }}
          registry.cn-chengdu.aliyuncs.com/clion/phpdever:latest
          registry.cn-chengdu.aliyuncs.com/clion/phpdever:php${{ steps.getVersion.outputs.PhpVersion }}

    - name: Build Release Body
      id: getBody
      if: steps.build.outcome == 'success'
      run: |
        BODYINFO="Changes for detail can view in offical link https://www.php.net/ChangeLog-$(echo ${{ steps.getVersion.outputs.PhpVersion }} | awk -F "." '{printf $1"."$2}').php and https://getcomposer.org/changelog/${{ steps.getVersion.outputs.ComposerVersion }}"
        echo "BodyInfo=$BODYINFO" >> $GITHUB_OUTPUT
      
    - name: Publish Release
      if: steps.build.outcome == 'success'
      uses: ncipollo/release-action@v1
      with:
        name: Phpdever v${{ steps.getVersion.outputs.PhpVersion }}
        tag: v${{ steps.getVersion.outputs.PhpVersion }}
        body: ${{ steps.getBody.outputs.BodyInfo }}
        skipIfReleaseExists: true
        
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 0
        keep_minimum_runs: 2
